// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`unit:lib/resolver > legacyMainResolve > should throw if main entry point is not found 1`] = `Cannot find package '\${process.cwd()}/__fixtures__/node_modules/@flex-development/mlly/' imported from \${process.cwd()}/__fixtures__/parent.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (0) 1`] = `"node:fs/promises"`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (1) 1`] = `file://\${process.cwd()}/src/internal/fs.browser.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (2) 1`] = `"node:path/posix"`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (3) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/subpath-imports/internal/path/windows.browser.mjs`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (4) 1`] = `file://\${process.cwd()}/src/lib/resolver.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (5) 1`] = `file://\${process.cwd()}/src/lib/resolver.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (6) 1`] = `file://\${process.cwd()}/node_modules/@flex-development/mkbuild/dist/index.mjs`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (7) 1`] = `"node:fs"`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (8) 1`] = `"node:fs/promises"`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (9) 1`] = `"node:url"`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (10) 1`] = `file://\${process.cwd()}/node_modules/vitest/dist/index.js`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (11) 1`] = `file://\${process.cwd()}/src/lib/index.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (12) 1`] = `file://\${process.cwd()}/node_modules/@flex-development/errnode/dist/index.mjs`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (13) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/exports-sugar/index.mjs`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (14) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/exports-sugar-a/index.mjs`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (15) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/legacy-main-1/a.js`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (16) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/legacy-main-1/index.js`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (17) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/legacy-main-2/index.json`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (18) 1`] = `file://\${process.cwd()}/package.json`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (19) 1`] = `file://\${process.cwd()}/src/index.mts`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (20) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/subpath-exports/lib/a.js`;

exports[`unit:lib/resolver > moduleResolve > should return resolved URL (21) 1`] = `file://\${process.cwd()}/__fixtures__/node_modules/subpath-exports/lib/a.js`;

exports[`unit:lib/resolver > moduleResolve > should throw if \`specifier\` contains encoded separators 1`] = `Invalid module '/lib%2futils.mjs' must not include encoded "/" or "\\" characters imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > moduleResolve > should throw if \`specifier\` resolves to a directory 1`] = `Directory import '\${process.cwd()}/src/' is not supported resolving ES modules imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > moduleResolve > should throw if \`specifier\` resolves to missing file 1`] = `Cannot find module '\${process.cwd()}/src/index.ts' imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > moduleResolve > should throw if module referrer is invalid (0) 1`] = `"Failed to resolve module specifier "./relative" from "data:text/javascript,export default import.meta.resolve("./relative")": Invalid relative URL or base scheme is not hierarchical."`;

exports[`unit:lib/resolver > moduleResolve > should throw if module referrer is invalid (1) 1`] = `"Failed to resolve module specifier "not-builtin" from "data:text/javascript,export default import.meta.resolve("not-builtin")": Invalid relative URL or base scheme is not hierarchical."`;

exports[`unit:lib/resolver > packageExportsResolve > should throw if \`exports\` object is invalid 1`] = `Invalid package config \${process.cwd()}/package.json while importing file://\${process.cwd()}/src/lib/__tests__/resolver.spec.mts. "exports" cannot contain some keys starting starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`;

exports[`unit:lib/resolver > packageExportsResolve > should throw if package path is not exported 1`] = `Package subpath './utils' is not defined by 'exports' in \${process.cwd()}/package.json imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageImportsResolve > should throw if \`specifier\` is invalid (0) 1`] = `Invalid module '#' is not a valid internal imports specifier name imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageImportsResolve > should throw if \`specifier\` is invalid (1) 1`] = `Invalid module '#/' is not a valid internal imports specifier name imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageImportsResolve > should throw if \`specifier\` is invalid (2) 1`] = `Invalid module '@flex-development/mlly' is not a valid internal imports specifier name imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageImportsResolve > should throw if package import is not defined 1`] = `Package import specifier '#mocks' is not defined in package \${process.cwd()}/package.json imported from \${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageResolve > should throw if \`specifier\` cannot be resolved 1`] = `Cannot find package 'missing-package' imported from \${process.cwd()}/__fixtures__/parent.mts`;

exports[`unit:lib/resolver > packageResolve > should throw if \`specifier\` is invalid (0) 1`] = `Invalid module '@flex-development\\errnode' is not a valid package name imported from file://\${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageResolve > should throw if \`specifier\` is invalid (1) 1`] = `Invalid module '@' is not a valid package name imported from file://\${process.cwd()}/src/lib/__tests__/resolver.spec.mts`;

exports[`unit:lib/resolver > packageTargetResolve > should throw if package config is invalid 1`] = `Invalid package config \${process.cwd()}/__fixtures__/node_modules/invalid-package-config/package.json while importing file://\${process.cwd()}/src/lib/__tests__/resolver.spec.mts. "exports" cannot contain numeric property keys`;
